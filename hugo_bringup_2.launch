
<launch>
	<include file="$(find hugo-urdf)/launch/hugo_urdf.launch"/>  
	<include file="$(find robot_localization)/launch/localization.launch"/>
	<include file="$(find rplidar_ros)/launch/rplidar.launch"/>
	<include file="$(find ublox_gps)/launch/ublox_device.launch"/>
	<node name="velocity_overwrite" pkg="velocity_overwrite" type="velocity_overwrite.py" output="screen">	
	</node>
        <!--<include file="$(find simple_drive)/launch/drive.launch"/> -->
	<!--<include file="$(find follow_waypoints)/launch/follow_waypoints.launch"/> -->
	<!--<include file="$(find gps_goal)/launch/initialize_origin.launch"/> -->
	<!--<include file="$(find gps_goal)/launch/gps_goal.launch"/> -->


	<arg name="serial_no"             default=""/>
	<arg name="json_file_path"        default=""/>
	<arg name="camera"                default="camera"/>

	<group ns="$(arg camera)">
		<include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">
			<arg name="serial_no"         value="$(arg serial_no)"/>
			<arg name="json_file_path"    value="$(arg json_file_path)"/>
			<arg name="depth_width"       value="640"/>
			<arg name="depth_height"      value="480"/>
			<arg name="depth_fps"         value="30"/>
			<arg name="color_width"       value="640"/>
			<arg name="color_height"      value="480"/>
			<arg name="color_fps"         value="30"/>
			<arg name="enable_depth"      value="true"/>
			<arg name="enable_color"      value="true"/>
			<arg name="enable_infra1"     value="false"/>
			<arg name="enable_infra2"     value="false"/>
			<arg name="enable_fisheye"    value="false"/>
			<arg name="enable_imu"        value="false"/>
			<arg name="enable_pointcloud" value="true"/>
			<arg name="enable_sync"       value="true"/>
			<arg name="tf_prefix"         value="$(arg camera)"/>
                        <arg name="align_depth"         default="true"/>
		</include>
	  </group>

        <node name="IMU" pkg="rosserial_python" type="serial_node.py" >
		<param name="port" value="/dev/ttyACM0" />
		<param name="baud" value="57600" />	
	</node>


        <node pkg="imu_complementary_filter" type="complementary_filter_node" name="complementary_filter_node" output="screen">
		<param name="gain_acc" value="0.2" />
		<param name="bias_alpha" value="0.1" />
		<param name="do_bias_estimation" value="true" />
		<param name="do_adaptive_gain" value="true" />
		<param name="use_mag" value="false" />	
		<param name="fixed_frame" value="base_link" />
		<remap from="imu/data_raw" to="/imuOdom"/>	
	</node>
<?ignore
        <include file="$(find rtabmap_ros)/launch/rtabmap.launch">
                <arg name="args" value="--delete_db_on_start"/>
                <arg name="rgb_topic" value="/camera/color/image_raw"/>
                <arg name="depth_topic" value="/camera/aligned_depth_to_color/image_raw"/>
                <arg name="camera_info_topic" value="/camera/color/camera_info"/>
                <arg name="depth_camera_info_topic" value="/camera/depth/camera_info"/>
                <arg name="approx_sync" value="false"/>
        </include>
?>
<?ignore
        <group ns="rtabmap">
                <!-- Use RGBD synchronization -->
     <!-- Here is a general example using a standalone nodelet,but it is recommended to attach this nodelet to nodelet manager of the camera to avoid topic serialization -->
                
                <include file="$(find rtabmap_ros)/launch/rtabmap.launch">
                        <arg name="args" value="--delete_db_on_start"/>
                        <arg name="rgb_topic" value="/camera/color/image_raw"/>
                        <arg name="depth_topic" value="/camera/aligned_depth_to_color/image_raw"/>
                        <arg name="camera_info_topic" value="/camera/color/camera_info"/>
                        <arg name="depth_camera_info_topic" value="/camera/depth/camera_info"/>
                        <arg name="approx_sync" value="false"/>
                </include>

                <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="--delete_db_on_start">
                        <param name="frame_id" type="string" value="base_link"/>
                        <param name="subscribe_depth" type="bool" value="false"/>
                        <param name="subscribe_rgbd" type="bool" value="true"/>
                        <param name="subscribe_scan" type="bool" value="true"/>
                        <remap from="odom" to="/base_controller/odom"/>
                        <remap from="scan" to="/base_scan"/>
                        <remap from="rgbd_image" to="rgbd_image"/>
                        <param name="queue_size" type="int" value="10"/>

                        <!-- RTAB-Map's parameters -->
                        <param name="RGBD/NeighborLinkRefining" type="string" value="true"/>
                        <param name="RGBD/ProximityBySpace"     type="string" value="true"/>
                        <param name="RGBD/AngularUpdate"        type="string" value="0.01"/>
                        <param name="RGBD/LinearUpdate"         type="string" value="0.01"/>
                        <param name="RGBD/OptimizeFromGraphEnd" type="string" value="false"/>
                        <param name="Grid/FromDepth"            type="string" value="false"/> <!-- occupancy grid from lidar -->
                        <param name="Reg/Force3DoF"             type="string" value="true"/>
                        <param name="Reg/Strategy"              type="string" value="1"/> <!-- 1=ICP -->
          
                        <!-- ICP parameters -->
                        <param name="Icp/VoxelSize"                 type="string" value="0.05"/>
                        <param name="Icp/MaxCorrespondenceDistance" type="string" value="0.1"/>
                        </node>
        </group>
?>

	<node pkg="odrive_ros" type="odrive_node" name="odrive_rear" ns="odrive">
		<remap from="/cmd_vel" to="/cmd_vel_mod"/>
                <param name="wheel_track" value="0.532"/>
                <param name="tyre_circumference" value="0.5"/>

                <param name="connect_on_startup"   value="true"/>
                <param name="calibrate_on_startup" value="false"/>
                <param name="engage_on_startup"    value="true"/>

                <param name="publish_odom"    value="false"/>
                <param name="publish_tf"      value="false"/>
                <param name="serial_number"     value="!387E37743437"/>
                <param name="reversed"      value="true"/>
                <param name="axis_for_right"      value="1"/>
        </node>


	<node pkg="odrive_ros" type="odrive_node" name="odrive_middle" ns="odrive">
		<remap from="/cmd_vel" to="/cmd_vel_mod"/>
		<param name="wheel_track" value="0.532"/>
		<param name="tyre_circumference" value="0.5"/>
		
		<param name="connect_on_startup"   value="true"/>
		<param name="calibrate_on_startup" value="false"/>
		<param name="engage_on_startup"    value="true"/>
		
		<param name="publish_odom"    value="true"/>
		<param name="publish_tf"      value="false"/>
		<param name="serial_number"	value="!386537573437"/>
		<param name="reversed"      value="true"/>
		<param name="axis_for_right"      value="1"/>
	</node>

	<node pkg="odrive_ros" type="odrive_node" name="odrive_front" ns="odrive">
		<remap from="/cmd_vel" to="/cmd_vel_mod"/>
                <param name="wheel_track" value="0.532"/>
                <param name="tyre_circumference" value="0.5"/>

                <param name="connect_on_startup"   value="true"/>
                <param name="calibrate_on_startup" value="false"/>
                <param name="engage_on_startup"    value="true"/>

                <param name="publish_odom"    value="false"/>
                <param name="publish_tf"      value="false"/>
                <param name="serial_number"     value="!387D37743437"/>
                <param name="reversed"      value="true"/>
                <param name="axis_for_right"      value="1"/>
        </node>

	<!-- AMCL or something else will this replace maybe?-->	
<!--
	<node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0 0 0 0 0 0 /map /odom 100"/>
-->


	<node pkg="timed_roslaunch" type="timed_roslaunch.sh" args="5 hugo_visualization visualization.launch" name="hugo_visualization" output="screen" />
	<node pkg="timed_roslaunch" type="timed_roslaunch.sh" args="1 hugo_visualization rviz_visualization.launch" name="hugo_rviz_visualization" output="screen" />

	<!--Parameter setup second--> 
</launch>
